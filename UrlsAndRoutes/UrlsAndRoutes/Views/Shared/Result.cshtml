@using UrlsAndRoutes.Models
@model Result

@{
	Layout = null;
}

<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="width device-width" />
		<title>Routing</title>
		<link rel="stylesheet" asp-href-include="lib/bootstrap/css/*.min.css" />
	</head>
	<body class="m-1 p-1">
		<table class="table table-bordered table-striped table-sm">
			<tr><th>Controller:</th><td>@Model.Controller</td></tr>
			<tr><th>Action:</th><td>@Model.Action</td></tr>
		@foreach(var key in Model.Data.Keys)
		{
			<tr><th>@key :</th><td>@Model.Data[key]</td></tr>
		}
		</table>
		<p>URL: @Url.Action("CustomVariable", "Home", new {id = 100})</p>

		<a asp-controller="Home" asp-action="Index" asp-route-id="Hello">This is an outgoind ur</a>
		<a asp-controller="Home" asp-action="Index" asp-route-id="Hello" asp-protocol="https"
			asp-host="myserver.mydomain.com" asp-fragment="myFragment">This is an outgoind ur</a>
		<a asp-controller="Admin" asp-action="Index">This target another controller</a>
		<a asp-controller="Customer" asp-action="Index">This is an outgoind url</a>

		<a asp-action="CustomVariable" asp-controller="Home">This is an outgoing url</a>
	<a asp-route="out">This is an outgoing url</a>
	</body>
</html>